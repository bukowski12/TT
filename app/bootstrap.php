<?php

use Nette\Application\Routers\Route,
	Nette\Application\Routers\SimpleRouter,
	Nette\Application\Routers\CliRouter;

// Load Nette Framework or autoloader generated by Composer
require __DIR__ . '/../libs/autoload.php';

// Configure application
$configurator = new Nette\Config\Configurator;
#Debug::enable(Debug::PRODUCTION);
$configurator->setProductionMode(TRUE);
$configurator->setDebugMode(array('192.168.254.2'));
// Enable Nette Debugger for error visualisation & logging
#$configurator->setDebugMode(TRUE);
$configurator->enableDebugger(__DIR__ . '/../log');

// Enable RobotLoader - this will load all classes automatically
$configurator->setTempDirectory(__DIR__ . '/../temp');
$configurator->createRobotLoader()
	->addDirectory(__DIR__)
	->addDirectory(__DIR__ . '/../libs')
	->register();

// Create Dependency Injection container from config.neon file
$configurator->addConfig(__DIR__ . '/config.neon');
$container = $configurator->createContainer();

// Setup router using mod_rewrite detection
if ($container->params['consoleMode']) {
    $application->allowedMethods = FALSE;
    //$container->router[] = new CliRouter();
    $container->router[] = new CliRouter(array('presenter' => 'Prometheus','action' => 'cron'));
} else {
	if (function_exists('apache_get_modules') && in_array('mod_rewrite', apache_get_modules())) {
		$container->router[] = new Route('index.php', 'Dashboard:default', Route::ONE_WAY);
		$container->router[] = new Route('<presenter>/<action>[/<id>]', 'Dashboard:default');

	} else {
		$container->router = new SimpleRouter('Dashboard:default');
	}
}

return $container;
